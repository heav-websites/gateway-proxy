volumes:
  grafana_data:
  prometheus_data:
services:
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    command:
      - '--path.rootfs=/host'
    networks:
      - prometheus
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=9100"
      - "prometheus.path=/metrics"

  docker-proxy:
    image: tecnativa/docker-socket-proxy:latest
    environment:
      CONTAINERS: 1
      INFO: 1
      VERSION: 1
      DISTRIBUTION: 1
      EXEC: 1
      GRPC: 1
      IMAGES: 1
      NETWORKS: 1
      NODES: 1
      PLUGINS: 1
      SERVICES: 1
      SESSION: 1
      SWARM: 1
      SYSTEM: 1
      TASKS: 1
      VOLUMES: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitor

  prometheus:
    build: prometheus
    restart: unless-stopped
    networks:
      - monitor
      - gatewayproxy
      - prometheus
    environment:
      - DOCKER_HOST=tcp://docker-proxy:2375
    depends_on:
      - docker-proxy
    expose:
      - 9090
    volumes:
      - prometheus_data:/prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`${PROMETHEUS_HOST}`)"
      - "traefik.http.routers.prometheus.entrypoints=web"
      - "traefik.http.routers.prometheus.middlewares=my-cloudflarewarp@docker,dashboard-auth@docker"

      - "prometheus.scrape=true"
      - "prometheus.port=9090"
      - "prometheus.path=/metrics"

  grafana:
    image: grafana/grafana:12.2
    restart: unless-stopped
    networks:
      - gatewayproxy
    environment:
      - GF_SERVER_ROOT_URL=${GRAFANA_SERVER_ROOT_URL}
      - GF_SERVER_DOMAIN=${GRAFANA_HOST}
    expose:
      - 3000
    volumes:
      - grafana_data:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`${GRAFANA_HOST}`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.routers.grafana.middlewares=my-cloudflarewarp@docker"

  traefik:
    image: traefik:v3.4
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - gatewayproxy
      - prometheus
    ports:
      - "${PUBLIC_PORT}:80"
      - 8082:8082/tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      # EntryPoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.metrics.address=:8082"

      # Providers 
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=gatewayproxy"

      # Cloudflare real ip plugin
      - "--experimental.plugins.cloudflarewarp.modulename=github.com/BetterCorp/cloudflarewarp"
      - "--experimental.plugins.cloudflarewarp.version=v1.3.3"

      # API & Dashboard 
      - "--api.dashboard=true"

      # Observability 
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.entrypoint=metrics"

    # Traefik Dynamic configuration via Docker labels
    labels:
      # Enable self‑routing
      - "traefik.enable=true"

      # Dashboard router
      - "traefik.http.routers.dashboard.rule=Host(`${DASHBOARD_HOST}`)"
      - "traefik.http.routers.dashboard.entrypoints=web"
      - "traefik.http.routers.dashboard.service=api@internal"

      # Configure cloudflare real ip plugin
      - "traefik.http.middlewares.my-cloudflarewarp.plugin.cloudflarewarp.disableDefault=false"

      # Basic‑auth middleware
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${DASHBOARD_AUTH}"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth@docker"

      # Prometheus discovery labels
      - "prometheus.scrape=true"
      - "prometheus.port=8082"
      - "prometheus.path=/metrics"

  whoami:
    image: traefik/whoami
    restart: unless-stopped
    networks:
      - gatewayproxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`${WHOAMI_HOST:-whoami.heav.fr}`)"
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.http.routers.whoami.middlewares=my-cloudflarewarp@docker"

networks:
  monitor:
  prometheus:
    name: prometheus
    external: true
  gatewayproxy:
    name: gatewayproxy
    external: true
